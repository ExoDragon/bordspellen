@using Core.Domain.Security.Roles
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using Core.Domain.Security
@using BordSpellen.Util
@inject UserManager<BoardGameUser> UserManager
@model Core.Domain.Data.Entities.GameEvent

@{
    ViewData["Title"] = "Details of " + Model.Name;
}

<div class="row">
    <div class="col-md-10 offset-1 container">
        @if (TempData["error"] != null)
        {
            <div class="col-md-12 alert alert-danger">
                <span> @TempData["error"] </span>
            </div>
        }
        @if (TempData["food"] != null)
        {
            <div class="col-md-12 alert alert-warning">
                <span> @TempData["food"] </span>
            </div>
        }
        @if (TempData["SubscriptionResponse"] != null)
        {
            <div class="col-md-12 alert alert-success">
                <span> @TempData["SubscriptionResponse"] </span>
            </div>
        }
        
        <h2 class="detailheader">Detail of @Model.Name</h2>
        <div class="row">
            <div class="col-md-5 col-xs-12 border-primary mb-3">
                <div class="card mb-3" style="max-width: 540px;">
                    <div class="row g-0">
                        <div class="col-md-12">
                            <div class="card-header text-white bg-secondary">
                                <p class="card-text">
                                    <h5 class="card-title">
                                        @Model.Name
                                    </h5>
                                </p>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="card-body">
                                <p class="card-text">@Model.Description</p>
                                <p class="card-text"><b>Location: @Model.ToString() </b></p>
                                <p class="card-text"><b>Event Date: @Model.EventDate.ToString()</b></p>
                                <p class="card-text"><b>Players: @Model.GamerGameEvents!.Count / @Model.MaxAmountOfPlayers</b></p>
                                <p class="card-text"><b>Organised By: <span class="float-end mx-2">@TempData["Average"]  <i class="bi bi-star-fill"></i></span><span class="float-end">@Model.Organiser!.ToString()</span></b></p>
                                <p class="card-text">
                                    Food includes:
                                    @foreach (var diet in Model.AvailableFoodTypes!)
                                    {
                                        <li class="p-1" style="list-style-type: none;">
                                            <span class="indicator badge bg-success text-white"> @diet.Diet?.Name </span>
                                        </li>
                                    }
                                </p>
                                <p>
                                    Ages allowed:
                                    @if (Model.IsAdultEvent)
                                    {
                                        <span class="indicator badge bg-danger rounded-circle text-white">18+</span>
                                    }
                                    else
                                    {
                                        <span class="indicator badge bg-success rounded-circle text-white"><del>18+</del></span>
                                    }
                                </p>
                            </div>
                        </div>
                        @if (
                            User.Identity!.IsAuthenticated && User.IsInRole(UserRoles.Organiser) &&
                            await UserManager.GetEmailAsync(await UserManager.GetUserAsync(User)) == Model.Organiser!.Email)
                        {
                            <div class="col-md-12">
                                <div class="card-footer bg-white">
                                    <p class="card-text">
                                        <a class="btn btn-outline-danger float-start mb-2" asp-action="Delete" asp-route-id="@Model.Id"><i class="bi bi-trash"></i>Delete</a>
                                        <a class="btn btn-outline-warning float-end mb-2" asp-action="Edit" asp-route-id="@Model.Id"><i class="bi bi-pencil-square"></i>Edit</a>
                                    </p>
                                </div>
                            </div>
                        }
                        else
                        {
                            @if (User.Identity!.IsAuthenticated && Model.EventDate >= DateTime.Now && User.IsInRole(UserRoles.User))
                            {
                                <div class="col-md-12">
                                    <div class="card-footer bg-white">
                                        <p class="card-text">
                                            @if (TempData["Subscription"]!.Equals("false"))
                                            {
                                                <a class="btn btn-outline-success float-start mb-2" asp-action="Subscribe" asp-route-id="@Model.Id"><i class="bi bi-plus-circle"></i> Oped in for Event </a>
                                            }
                                            else
                                            {
                                                <a class="btn btn-outline-danger float-start mb-2" asp-action="Unsubscribe" asp-route-id="@Model.Id"><i class="bi bi-dash-circle"></i> Oped out for Event </a>
                                            }
                                        </p>
                                    </div>
                                </div> 
                            }
                        }
                    </div>
                </div>
            </div>
            
            <div class="col-md-7 col-xs-12 border-primary mb-3">
                
                <h5 class="detailheader"> BoardGames </h5>
                <div class="container" style="overflow-y: scroll; max-height: 75%;">
                    <div class="row">
                        @foreach (var item in Model.BoardGameEvents!)
                        {
                            <div class="col-12 p-3">
                                <div class="card w-100">
                                    <div class="card-body">
                                        <div class="row">
                                            <div class="col-6">
                                                <img class="rounded-circle" src="@item.BoardGame?.ImageStringFromByteArray()" alt="@item.BoardGame?.Name" style="max-width: 75px"/>
                                            </div>
                                            <div class="col-6">
                                                <div class="row">
                                                    <div class="col-12">
                                                        <h5 class="detailheader-border"> @Html.DisplayFor(modelItem => item.BoardGame!.Name) </h5>
                                                    </div>
                                                    <div class="col-12">
                                                        @Html.DisplayFor(modelItem => item.BoardGame!.Description)
                                                    </div>
                                                </div>
                                                <div class="row">
                                                    
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row mt-3">
                                            <div class="col-12">
                                                @if (item.BoardGame!.HasAgeRestriction)
                                                {
                                                    <span class="indicator badge bg-danger rounded-circle text-white">18+</span>
                                                }
                                                else
                                                {
                                                    <span class="indicator badge bg-success rounded-circle text-white"><del>18+</del></span>
                                                }
                                                
                                                <span class="indicator badge bg-info rounded-circle text-white float-end" style="margin-left: 15px"> @item.BoardGame.Genre.ToString() </span>
                                                <span class="indicator badge bg-info rounded-circle text-white float-end"> @item.BoardGame.Type.ToString() </span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-12 border-primary mb-3">
                <div class="row">
                    <div class="col col-6">
                        <h5 class="detailheader"> Reviews </h5>
                    </div>
                    @if (Model.EventDate < DateTime.Now && User.Identity!.IsAuthenticated && User.IsInRole(UserRoles.User))
                    {
                        <div class="col col-6">
                            <a class="btn btn-success float-end" asp-action="Create" asp-controller="Review" asp-route-id="@Model.Id"> new Review </a>
                        </div>
                    }
                </div>
                @foreach (var item in Model.ReviewsRecieved!)
                {
                    <div class="row p-2 m-2"  style="background-color: white; border-radius: 15px">
                        <div class="row">
                            <div class="col-12">
                                <span class="reviewheader">@item.Person!.ToString()</span>
                                <span class="m-4"> @item.Rating <i class="bi bi-star-fill ml-1"></i></span>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12">
                                @Html.DisplayFor(modelItem => item.ReviewDescription)
                            </div>
                            @if (User.Identity!.IsAuthenticated && item.Person!.Email == await UserManager.GetEmailAsync(await UserManager.GetUserAsync(User)))
                            {
                                <div class="col-12 mt-2">
                                    <a class="btn btn-warning" asp-action="Update" asp-controller="Review" asp-route-id="@item.Id"><i class="bi bi-pencil"></i> Edit </a>
                                    <a class="btn btn-danger" asp-action="Delete" asp-controller="Review" asp-route-id="@item.Id"><i class="bi bi-trash"></i> Delete </a>
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>