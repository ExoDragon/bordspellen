@using Core.Domain.Security.Roles
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using BordSpellen.Util
@model Core.Domain.Data.Entities.BoardGame
@{
    ViewData["Title"] = "Create BoardGame";
}

<div class="row text">
    <div class="col-md-8 offset-2">
        <p>
            <h1>Details of @Model.Name</h1>
        </p>
        <div class="row">
            <div class="col-md-8 offset-2">
                <form asp-action="Edit">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <div class="row">
                        <div class="form-group col-md-6">
                            <label asp-for="Name" class="control-label"></label>
                            <input asp-for="Name" class="form-control" readonly/>
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-6">
                            <label asp-for="Description" class="control-label"></label>
                            <input asp-for="Description" class="form-control" readonly/>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-8">
                            <label asp-for="Image" class="control-label"></label><br>
                            <img class="rounded-circle mt-1" src="@Model.ImageStringFromByteArray()" alt="@Model.Name" style="max-width: 150px"/>
                        </div>
                        <div class="form-group col-md-4">
                            <label asp-for="HasAgeRestriction" class="control-label"></label> <br>
                            @if (Model.HasAgeRestriction)
                            {
                                <span class="indicator badge bg-danger rounded-circle text-white mt-1">18+</span>
                            }
                            else
                            {
                                <span class="indicator badge bg-success rounded-circle text-white mt-1"><del>18+</del></span>
                            }
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-6 mt-2">
                            
                            <label asp-for="Genre" class="control-label"></label><br>
                            <span class="indicator badge bg-info text-white mt-1"> @Model.Genre.ToString() </span>
                        </div>
                        <div class="form-group col-md-6">
                            <label asp-for="Type" class="control-label"></label><br>
                            <span class="indicator badge bg-info text-white mt-1"> @Model.Type.ToString() </span>
                        </div>
                    </div>
                    
                    @if (User.Identity!.IsAuthenticated && User.IsInRole(UserRoles.User))
                    {
                        <div class="form-group pt-2">
                            <a class="btn btn-outline-danger float-end" asp-action="Delete" asp-route-id="@Model.Id">Delete</a>
                            <a class="btn btn-outline-warning float-end mx-2" asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
                            <a class="btn btn-outline-secondary" asp-action="Index">Show All</a>
                        </div>
                    }
                    else
                    {
                        <div class="form-group pt-2">
                            <a class="btn btn-outline-secondary" asp-controller="GameEvent" asp-action="Index">Go Back</a>
                        </div>
                    }
                </form>
            </div>
        </div>
    </div>
</div>